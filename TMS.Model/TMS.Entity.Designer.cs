//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ChildCategory_ParentCategory", "ToolCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.ToolCategory), "ToolCategory1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolCategory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_Tool_ToolCategory", "ToolCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.ToolCategory), "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.Tool), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_PurchaseOrder_Supply", "Supply", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Supply), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_PurchaseOrder_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Tool), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventory_Supply", "Supply", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.Supply), "ToolInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ChildUnit_ParentUnit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.Unit), "Unit1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.Unit), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventory_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Tool), "ToolInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.ToolInventory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_PurchaseOrder", "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.PurchaseOrder), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_Supply", "Supply", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.Supply), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Tool), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_PurchaseOrder_SystemUser", "SystemUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.SystemUser), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_OutboundOrder_SystemUser", "SystemUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.SystemUser), "OutboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.OutboundOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_OutboundOrder_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Unit), "OutboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.OutboundOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_OutboundOrderDetail_OutboundOrder", "OutboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.OutboundOrder), "OutboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.OutboundOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_OutboundOrderDetail_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Tool), "OutboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.OutboundOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_OutboundOrder", "OutboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.OutboundOrder), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_OutboundOrderDetail", "OutboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.OutboundOrderDetail), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.Unit), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_InboundOrder_OutboundOrder", "OutboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.OutboundOrder), "InboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.InboundOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_InboundOrder_SystemUser", "SystemUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.SystemUser), "InboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.InboundOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_InboundOrder_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Unit), "InboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.InboundOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_InboundOrderDetail_InboundOrder", "InboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.InboundOrder), "InboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.InboundOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_InboundOrderDetail_OutboundOrderDetail", "OutboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.OutboundOrderDetail), "InboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.InboundOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_InboundOrderDetail_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Tool), "InboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.InboundOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ScrapOrder_OutboundOrder", "OutboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.OutboundOrder), "ScrapOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ScrapOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ScrapOrderDetail_OutboundOrderDetail", "OutboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.OutboundOrderDetail), "ScrapOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ScrapOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ScrapOrder_SystemUser", "SystemUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.SystemUser), "ScrapOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ScrapOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ScrapOrder_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.Unit), "ScrapOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ScrapOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ScrapOrderDetail_ScrapOrder", "ScrapOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.ScrapOrder), "ScrapOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ScrapOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ScrapOrderDetail_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Tool), "ScrapOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ScrapOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_RepairOrder_OutboundOrder", "OutboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.OutboundOrder), "RepairOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.RepairOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_RepairOrderDetail_OutboundOrderDetail", "OutboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.OutboundOrderDetail), "RepairOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.RepairOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_RepairOrder_SystemUser", "SystemUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.SystemUser), "RepairOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.RepairOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_RepairOrder_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.Unit), "RepairOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.RepairOrder), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_RepairOrderDetail_RepairOrder", "RepairOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.RepairOrder), "RepairOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.RepairOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_RepairOrderDetail_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Tool), "RepairOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.RepairOrderDetail), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_InboundOrder", "InboundOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.InboundOrder), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_InboundOrderDetail", "InboundOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.InboundOrderDetail), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_RepairOrder", "RepairOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.RepairOrder), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_RepairOrderDetail", "RepairOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.RepairOrderDetail), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_ScrapOrder", "ScrapOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.ScrapOrder), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolInventoryHistory_ScrapOrderDetail", "ScrapOrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TMS.Model.ScrapOrderDetail), "ToolInventoryHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolInventoryHistory), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolGroup_Tool", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Tool), "ToolGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolGroup), true)]
[assembly: EdmRelationshipAttribute("TMS.Model", "FK_ToolGroup_Tool2", "Tool", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TMS.Model.Tool), "ToolGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TMS.Model.ToolGroup), true)]

#endregion

namespace TMS.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TMSEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TMSEntities object using the connection string found in the 'TMSEntities' section of the application configuration file.
        /// </summary>
        public TMSEntities() : base("name=TMSEntities", "TMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TMSEntities object.
        /// </summary>
        public TMSEntities(string connectionString) : base(connectionString, "TMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TMSEntities object.
        /// </summary>
        public TMSEntities(EntityConnection connection) : base(connection, "TMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemUser> SystemUsers
        {
            get
            {
                if ((_SystemUsers == null))
                {
                    _SystemUsers = base.CreateObjectSet<SystemUser>("SystemUsers");
                }
                return _SystemUsers;
            }
        }
        private ObjectSet<SystemUser> _SystemUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ToolCategory> ToolCategories
        {
            get
            {
                if ((_ToolCategories == null))
                {
                    _ToolCategories = base.CreateObjectSet<ToolCategory>("ToolCategories");
                }
                return _ToolCategories;
            }
        }
        private ObjectSet<ToolCategory> _ToolCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supply> Supplies
        {
            get
            {
                if ((_Supplies == null))
                {
                    _Supplies = base.CreateObjectSet<Supply>("Supplies");
                }
                return _Supplies;
            }
        }
        private ObjectSet<Supply> _Supplies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tool> Tools
        {
            get
            {
                if ((_Tools == null))
                {
                    _Tools = base.CreateObjectSet<Tool>("Tools");
                }
                return _Tools;
            }
        }
        private ObjectSet<Tool> _Tools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrder> PurchaseOrders
        {
            get
            {
                if ((_PurchaseOrders == null))
                {
                    _PurchaseOrders = base.CreateObjectSet<PurchaseOrder>("PurchaseOrders");
                }
                return _PurchaseOrders;
            }
        }
        private ObjectSet<PurchaseOrder> _PurchaseOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Unit> Units
        {
            get
            {
                if ((_Units == null))
                {
                    _Units = base.CreateObjectSet<Unit>("Units");
                }
                return _Units;
            }
        }
        private ObjectSet<Unit> _Units;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ToolInventory> ToolInventories
        {
            get
            {
                if ((_ToolInventories == null))
                {
                    _ToolInventories = base.CreateObjectSet<ToolInventory>("ToolInventories");
                }
                return _ToolInventories;
            }
        }
        private ObjectSet<ToolInventory> _ToolInventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemRole> SystemRoles
        {
            get
            {
                if ((_SystemRoles == null))
                {
                    _SystemRoles = base.CreateObjectSet<SystemRole>("SystemRoles");
                }
                return _SystemRoles;
            }
        }
        private ObjectSet<SystemRole> _SystemRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                if ((_ToolInventoryHistories == null))
                {
                    _ToolInventoryHistories = base.CreateObjectSet<ToolInventoryHistory>("ToolInventoryHistories");
                }
                return _ToolInventoryHistories;
            }
        }
        private ObjectSet<ToolInventoryHistory> _ToolInventoryHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OutboundOrder> OutboundOrders
        {
            get
            {
                if ((_OutboundOrders == null))
                {
                    _OutboundOrders = base.CreateObjectSet<OutboundOrder>("OutboundOrders");
                }
                return _OutboundOrders;
            }
        }
        private ObjectSet<OutboundOrder> _OutboundOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OutboundOrderDetail> OutboundOrderDetails
        {
            get
            {
                if ((_OutboundOrderDetails == null))
                {
                    _OutboundOrderDetails = base.CreateObjectSet<OutboundOrderDetail>("OutboundOrderDetails");
                }
                return _OutboundOrderDetails;
            }
        }
        private ObjectSet<OutboundOrderDetail> _OutboundOrderDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InboundOrder> InboundOrders
        {
            get
            {
                if ((_InboundOrders == null))
                {
                    _InboundOrders = base.CreateObjectSet<InboundOrder>("InboundOrders");
                }
                return _InboundOrders;
            }
        }
        private ObjectSet<InboundOrder> _InboundOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InboundOrderDetail> InboundOrderDetails
        {
            get
            {
                if ((_InboundOrderDetails == null))
                {
                    _InboundOrderDetails = base.CreateObjectSet<InboundOrderDetail>("InboundOrderDetails");
                }
                return _InboundOrderDetails;
            }
        }
        private ObjectSet<InboundOrderDetail> _InboundOrderDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScrapOrder> ScrapOrders
        {
            get
            {
                if ((_ScrapOrders == null))
                {
                    _ScrapOrders = base.CreateObjectSet<ScrapOrder>("ScrapOrders");
                }
                return _ScrapOrders;
            }
        }
        private ObjectSet<ScrapOrder> _ScrapOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScrapOrderDetail> ScrapOrderDetails
        {
            get
            {
                if ((_ScrapOrderDetails == null))
                {
                    _ScrapOrderDetails = base.CreateObjectSet<ScrapOrderDetail>("ScrapOrderDetails");
                }
                return _ScrapOrderDetails;
            }
        }
        private ObjectSet<ScrapOrderDetail> _ScrapOrderDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RepairOrder> RepairOrders
        {
            get
            {
                if ((_RepairOrders == null))
                {
                    _RepairOrders = base.CreateObjectSet<RepairOrder>("RepairOrders");
                }
                return _RepairOrders;
            }
        }
        private ObjectSet<RepairOrder> _RepairOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RepairOrderDetail> RepairOrderDetails
        {
            get
            {
                if ((_RepairOrderDetails == null))
                {
                    _RepairOrderDetails = base.CreateObjectSet<RepairOrderDetail>("RepairOrderDetails");
                }
                return _RepairOrderDetails;
            }
        }
        private ObjectSet<RepairOrderDetail> _RepairOrderDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Article> Articles
        {
            get
            {
                if ((_Articles == null))
                {
                    _Articles = base.CreateObjectSet<Article>("Articles");
                }
                return _Articles;
            }
        }
        private ObjectSet<Article> _Articles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ToolGroup> ToolGroups
        {
            get
            {
                if ((_ToolGroups == null))
                {
                    _ToolGroups = base.CreateObjectSet<ToolGroup>("ToolGroups");
                }
                return _ToolGroups;
            }
        }
        private ObjectSet<ToolGroup> _ToolGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Jobs
        {
            get
            {
                if ((_Jobs == null))
                {
                    _Jobs = base.CreateObjectSet<Job>("Jobs");
                }
                return _Jobs;
            }
        }
        private ObjectSet<Job> _Jobs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemUsers(SystemUser systemUser)
        {
            base.AddObject("SystemUsers", systemUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ToolCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToToolCategories(ToolCategory toolCategory)
        {
            base.AddObject("ToolCategories", toolCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Supplies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplies(Supply supply)
        {
            base.AddObject("Supplies", supply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTools(Tool tool)
        {
            base.AddObject("Tools", tool);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrders(PurchaseOrder purchaseOrder)
        {
            base.AddObject("PurchaseOrders", purchaseOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Units EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnits(Unit unit)
        {
            base.AddObject("Units", unit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ToolInventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToToolInventories(ToolInventory toolInventory)
        {
            base.AddObject("ToolInventories", toolInventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SystemRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemRoles(SystemRole systemRole)
        {
            base.AddObject("SystemRoles", systemRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ToolInventoryHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToToolInventoryHistories(ToolInventoryHistory toolInventoryHistory)
        {
            base.AddObject("ToolInventoryHistories", toolInventoryHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OutboundOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOutboundOrders(OutboundOrder outboundOrder)
        {
            base.AddObject("OutboundOrders", outboundOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OutboundOrderDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOutboundOrderDetails(OutboundOrderDetail outboundOrderDetail)
        {
            base.AddObject("OutboundOrderDetails", outboundOrderDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InboundOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInboundOrders(InboundOrder inboundOrder)
        {
            base.AddObject("InboundOrders", inboundOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InboundOrderDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInboundOrderDetails(InboundOrderDetail inboundOrderDetail)
        {
            base.AddObject("InboundOrderDetails", inboundOrderDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScrapOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScrapOrders(ScrapOrder scrapOrder)
        {
            base.AddObject("ScrapOrders", scrapOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScrapOrderDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScrapOrderDetails(ScrapOrderDetail scrapOrderDetail)
        {
            base.AddObject("ScrapOrderDetails", scrapOrderDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RepairOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRepairOrders(RepairOrder repairOrder)
        {
            base.AddObject("RepairOrders", repairOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RepairOrderDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRepairOrderDetails(RepairOrderDetail repairOrderDetail)
        {
            base.AddObject("RepairOrderDetails", repairOrderDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Articles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArticles(Article article)
        {
            base.AddObject("Articles", article);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ToolGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToToolGroups(ToolGroup toolGroup)
        {
            base.AddObject("ToolGroups", toolGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobs(Job job)
        {
            base.AddObject("Jobs", job);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="Article")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Article : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Article object.
        /// </summary>
        /// <param name="articleID">Initial value of the ArticleID property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="isTop">Initial value of the IsTop property.</param>
        /// <param name="lastUpdateTime">Initial value of the LastUpdateTime property.</param>
        public static Article CreateArticle(global::System.Int32 articleID, global::System.String subject, global::System.Boolean deleted, global::System.Boolean isTop, global::System.DateTime lastUpdateTime)
        {
            Article article = new Article();
            article.ArticleID = articleID;
            article.Subject = subject;
            article.Deleted = deleted;
            article.IsTop = isTop;
            article.LastUpdateTime = lastUpdateTime;
            return article;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticleID
        {
            get
            {
                return _ArticleID;
            }
            set
            {
                if (_ArticleID != value)
                {
                    OnArticleIDChanging(value);
                    ReportPropertyChanging("ArticleID");
                    _ArticleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArticleID");
                    OnArticleIDChanged();
                }
            }
        }
        private global::System.Int32 _ArticleID;
        partial void OnArticleIDChanging(global::System.Int32 value);
        partial void OnArticleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTop
        {
            get
            {
                return _IsTop;
            }
            set
            {
                OnIsTopChanging(value);
                ReportPropertyChanging("IsTop");
                _IsTop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTop");
                OnIsTopChanged();
            }
        }
        private global::System.Boolean _IsTop;
        partial void OnIsTopChanging(global::System.Boolean value);
        partial void OnIsTopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTime
        {
            get
            {
                return _LastUpdateTime;
            }
            set
            {
                OnLastUpdateTimeChanging(value);
                ReportPropertyChanging("LastUpdateTime");
                _LastUpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateTime");
                OnLastUpdateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateTime;
        partial void OnLastUpdateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="InboundOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InboundOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InboundOrder object.
        /// </summary>
        /// <param name="inboundOrderID">Initial value of the InboundOrderID property.</param>
        /// <param name="inboundDate">Initial value of the InboundDate property.</param>
        /// <param name="outboundOrderID">Initial value of the OutboundOrderID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="lastUpdatedBy">Initial value of the LastUpdatedBy property.</param>
        /// <param name="lastUpdateTime">Initial value of the LastUpdateTime property.</param>
        public static InboundOrder CreateInboundOrder(global::System.Int32 inboundOrderID, global::System.DateTime inboundDate, global::System.Int32 outboundOrderID, global::System.String code, global::System.Int32 customerID, global::System.Int32 lastUpdatedBy, global::System.DateTime lastUpdateTime)
        {
            InboundOrder inboundOrder = new InboundOrder();
            inboundOrder.InboundOrderID = inboundOrderID;
            inboundOrder.InboundDate = inboundDate;
            inboundOrder.OutboundOrderID = outboundOrderID;
            inboundOrder.Code = code;
            inboundOrder.CustomerID = customerID;
            inboundOrder.LastUpdatedBy = lastUpdatedBy;
            inboundOrder.LastUpdateTime = lastUpdateTime;
            return inboundOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InboundOrderID
        {
            get
            {
                return _InboundOrderID;
            }
            set
            {
                if (_InboundOrderID != value)
                {
                    OnInboundOrderIDChanging(value);
                    ReportPropertyChanging("InboundOrderID");
                    _InboundOrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InboundOrderID");
                    OnInboundOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _InboundOrderID;
        partial void OnInboundOrderIDChanging(global::System.Int32 value);
        partial void OnInboundOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InboundDate
        {
            get
            {
                return _InboundDate;
            }
            set
            {
                OnInboundDateChanging(value);
                ReportPropertyChanging("InboundDate");
                _InboundDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InboundDate");
                OnInboundDateChanged();
            }
        }
        private global::System.DateTime _InboundDate;
        partial void OnInboundDateChanging(global::System.DateTime value);
        partial void OnInboundDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OutboundOrderID
        {
            get
            {
                return _OutboundOrderID;
            }
            set
            {
                OnOutboundOrderIDChanging(value);
                ReportPropertyChanging("OutboundOrderID");
                _OutboundOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundOrderID");
                OnOutboundOrderIDChanged();
            }
        }
        private global::System.Int32 _OutboundOrderID;
        partial void OnOutboundOrderIDChanging(global::System.Int32 value);
        partial void OnOutboundOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private global::System.Int32 _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(global::System.Int32 value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTime
        {
            get
            {
                return _LastUpdateTime;
            }
            set
            {
                OnLastUpdateTimeChanging(value);
                ReportPropertyChanging("LastUpdateTime");
                _LastUpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateTime");
                OnLastUpdateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateTime;
        partial void OnLastUpdateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrder_OutboundOrder", "OutboundOrder")]
        public OutboundOrder OutboundOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_InboundOrder_OutboundOrder", "OutboundOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_InboundOrder_OutboundOrder", "OutboundOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutboundOrder> OutboundOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_InboundOrder_OutboundOrder", "OutboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutboundOrder>("TMS.Model.FK_InboundOrder_OutboundOrder", "OutboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrder_SystemUser", "SystemUser")]
        public SystemUser SystemUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_InboundOrder_SystemUser", "SystemUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_InboundOrder_SystemUser", "SystemUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemUser> SystemUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_InboundOrder_SystemUser", "SystemUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemUser>("TMS.Model.FK_InboundOrder_SystemUser", "SystemUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrder_Unit", "Unit")]
        public Unit Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_InboundOrder_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_InboundOrder_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_InboundOrder_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("TMS.Model.FK_InboundOrder_Unit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrderDetail_InboundOrder", "InboundOrderDetail")]
        public EntityCollection<InboundOrderDetail> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_InboundOrder", "InboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_InboundOrder", "InboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_InboundOrder", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_InboundOrder", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_InboundOrder", "ToolInventoryHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="InboundOrderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InboundOrderDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InboundOrderDetail object.
        /// </summary>
        /// <param name="inboundOrderDetailID">Initial value of the InboundOrderDetailID property.</param>
        /// <param name="inboundOrderID">Initial value of the InboundOrderID property.</param>
        /// <param name="inboundDate">Initial value of the InboundDate property.</param>
        /// <param name="outboundOrderDetailID">Initial value of the OutboundOrderDetailID property.</param>
        /// <param name="toolID">Initial value of the ToolID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="prescrapQuantity">Initial value of the PrescrapQuantity property.</param>
        /// <param name="transferQuantity">Initial value of the TransferQuantity property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        public static InboundOrderDetail CreateInboundOrderDetail(global::System.Int32 inboundOrderDetailID, global::System.Int32 inboundOrderID, global::System.DateTime inboundDate, global::System.Int32 outboundOrderDetailID, global::System.Int32 toolID, global::System.Decimal quantity, global::System.Decimal prescrapQuantity, global::System.Decimal transferQuantity, global::System.Decimal unitPrice)
        {
            InboundOrderDetail inboundOrderDetail = new InboundOrderDetail();
            inboundOrderDetail.InboundOrderDetailID = inboundOrderDetailID;
            inboundOrderDetail.InboundOrderID = inboundOrderID;
            inboundOrderDetail.InboundDate = inboundDate;
            inboundOrderDetail.OutboundOrderDetailID = outboundOrderDetailID;
            inboundOrderDetail.ToolID = toolID;
            inboundOrderDetail.Quantity = quantity;
            inboundOrderDetail.PrescrapQuantity = prescrapQuantity;
            inboundOrderDetail.TransferQuantity = transferQuantity;
            inboundOrderDetail.UnitPrice = unitPrice;
            return inboundOrderDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InboundOrderDetailID
        {
            get
            {
                return _InboundOrderDetailID;
            }
            set
            {
                if (_InboundOrderDetailID != value)
                {
                    OnInboundOrderDetailIDChanging(value);
                    ReportPropertyChanging("InboundOrderDetailID");
                    _InboundOrderDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InboundOrderDetailID");
                    OnInboundOrderDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _InboundOrderDetailID;
        partial void OnInboundOrderDetailIDChanging(global::System.Int32 value);
        partial void OnInboundOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InboundOrderID
        {
            get
            {
                return _InboundOrderID;
            }
            set
            {
                OnInboundOrderIDChanging(value);
                ReportPropertyChanging("InboundOrderID");
                _InboundOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InboundOrderID");
                OnInboundOrderIDChanged();
            }
        }
        private global::System.Int32 _InboundOrderID;
        partial void OnInboundOrderIDChanging(global::System.Int32 value);
        partial void OnInboundOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InboundDate
        {
            get
            {
                return _InboundDate;
            }
            set
            {
                OnInboundDateChanging(value);
                ReportPropertyChanging("InboundDate");
                _InboundDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InboundDate");
                OnInboundDateChanged();
            }
        }
        private global::System.DateTime _InboundDate;
        partial void OnInboundDateChanging(global::System.DateTime value);
        partial void OnInboundDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OutboundOrderDetailID
        {
            get
            {
                return _OutboundOrderDetailID;
            }
            set
            {
                OnOutboundOrderDetailIDChanging(value);
                ReportPropertyChanging("OutboundOrderDetailID");
                _OutboundOrderDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundOrderDetailID");
                OnOutboundOrderDetailIDChanged();
            }
        }
        private global::System.Int32 _OutboundOrderDetailID;
        partial void OnOutboundOrderDetailIDChanging(global::System.Int32 value);
        partial void OnOutboundOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                OnToolIDChanging(value);
                ReportPropertyChanging("ToolID");
                _ToolID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolID");
                OnToolIDChanged();
            }
        }
        private global::System.Int32 _ToolID;
        partial void OnToolIDChanging(global::System.Int32 value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PrescrapQuantity
        {
            get
            {
                return _PrescrapQuantity;
            }
            set
            {
                OnPrescrapQuantityChanging(value);
                ReportPropertyChanging("PrescrapQuantity");
                _PrescrapQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrescrapQuantity");
                OnPrescrapQuantityChanged();
            }
        }
        private global::System.Decimal _PrescrapQuantity;
        partial void OnPrescrapQuantityChanging(global::System.Decimal value);
        partial void OnPrescrapQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TransferQuantity
        {
            get
            {
                return _TransferQuantity;
            }
            set
            {
                OnTransferQuantityChanging(value);
                ReportPropertyChanging("TransferQuantity");
                _TransferQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferQuantity");
                OnTransferQuantityChanged();
            }
        }
        private global::System.Decimal _TransferQuantity;
        partial void OnTransferQuantityChanging(global::System.Decimal value);
        partial void OnTransferQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScrapReason
        {
            get
            {
                return _ScrapReason;
            }
            set
            {
                OnScrapReasonChanging(value);
                ReportPropertyChanging("ScrapReason");
                _ScrapReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScrapReason");
                OnScrapReasonChanged();
            }
        }
        private global::System.String _ScrapReason;
        partial void OnScrapReasonChanging(global::System.String value);
        partial void OnScrapReasonChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrderDetail_InboundOrder", "InboundOrder")]
        public InboundOrder InboundOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundOrder>("TMS.Model.FK_InboundOrderDetail_InboundOrder", "InboundOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundOrder>("TMS.Model.FK_InboundOrderDetail_InboundOrder", "InboundOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InboundOrder> InboundOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundOrder>("TMS.Model.FK_InboundOrderDetail_InboundOrder", "InboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InboundOrder>("TMS.Model.FK_InboundOrderDetail_InboundOrder", "InboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrderDetail_OutboundOrderDetail", "OutboundOrderDetail")]
        public OutboundOrderDetail OutboundOrderDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_OutboundOrderDetail", "OutboundOrderDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_OutboundOrderDetail", "OutboundOrderDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutboundOrderDetail> OutboundOrderDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_OutboundOrderDetail", "OutboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_OutboundOrderDetail", "OutboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrderDetail_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_InboundOrderDetail_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_InboundOrderDetail_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_InboundOrderDetail_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("TMS.Model.FK_InboundOrderDetail_Tool", "Tool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_InboundOrderDetail", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_InboundOrderDetail", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_InboundOrderDetail", "ToolInventoryHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="jobID">Initial value of the JobID property.</param>
        public static Job CreateJob(global::System.Int32 jobID)
        {
            Job job = new Job();
            job.JobID = jobID;
            return job;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                if (_JobID != value)
                {
                    OnJobIDChanging(value);
                    ReportPropertyChanging("JobID");
                    _JobID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobID");
                    OnJobIDChanged();
                }
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobCode
        {
            get
            {
                return _JobCode;
            }
            set
            {
                OnJobCodeChanging(value);
                ReportPropertyChanging("JobCode");
                _JobCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobCode");
                OnJobCodeChanged();
            }
        }
        private global::System.String _JobCode;
        partial void OnJobCodeChanging(global::System.String value);
        partial void OnJobCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobPosition
        {
            get
            {
                return _JobPosition;
            }
            set
            {
                OnJobPositionChanging(value);
                ReportPropertyChanging("JobPosition");
                _JobPosition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobPosition");
                OnJobPositionChanged();
            }
        }
        private global::System.String _JobPosition;
        partial void OnJobPositionChanging(global::System.String value);
        partial void OnJobPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobType
        {
            get
            {
                return _JobType;
            }
            set
            {
                OnJobTypeChanging(value);
                ReportPropertyChanging("JobType");
                _JobType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobType");
                OnJobTypeChanged();
            }
        }
        private global::System.String _JobType;
        partial void OnJobTypeChanging(global::System.String value);
        partial void OnJobTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Berth
        {
            get
            {
                return _Berth;
            }
            set
            {
                OnBerthChanging(value);
                ReportPropertyChanging("Berth");
                _Berth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Berth");
                OnBerthChanged();
            }
        }
        private global::System.String _Berth;
        partial void OnBerthChanging(global::System.String value);
        partial void OnBerthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Machine
        {
            get
            {
                return _Machine;
            }
            set
            {
                OnMachineChanging(value);
                ReportPropertyChanging("Machine");
                _Machine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Machine");
                OnMachineChanged();
            }
        }
        private global::System.String _Machine;
        partial void OnMachineChanging(global::System.String value);
        partial void OnMachineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ship
        {
            get
            {
                return _Ship;
            }
            set
            {
                OnShipChanging(value);
                ReportPropertyChanging("Ship");
                _Ship = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ship");
                OnShipChanged();
            }
        }
        private global::System.String _Ship;
        partial void OnShipChanging(global::System.String value);
        partial void OnShipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hatch
        {
            get
            {
                return _Hatch;
            }
            set
            {
                OnHatchChanging(value);
                ReportPropertyChanging("Hatch");
                _Hatch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hatch");
                OnHatchChanged();
            }
        }
        private global::System.String _Hatch;
        partial void OnHatchChanging(global::System.String value);
        partial void OnHatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cargo
        {
            get
            {
                return _Cargo;
            }
            set
            {
                OnCargoChanging(value);
                ReportPropertyChanging("Cargo");
                _Cargo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cargo");
                OnCargoChanged();
            }
        }
        private global::System.String _Cargo;
        partial void OnCargoChanging(global::System.String value);
        partial void OnCargoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.String _Quantity;
        partial void OnQuantityChanging(global::System.String value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Process
        {
            get
            {
                return _Process;
            }
            set
            {
                OnProcessChanging(value);
                ReportPropertyChanging("Process");
                _Process = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Process");
                OnProcessChanged();
            }
        }
        private global::System.String _Process;
        partial void OnProcessChanging(global::System.String value);
        partial void OnProcessChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="OutboundOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OutboundOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OutboundOrder object.
        /// </summary>
        /// <param name="outboundOrderID">Initial value of the OutboundOrderID property.</param>
        /// <param name="outboundDate">Initial value of the OutboundDate property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="lastUpdatedBy">Initial value of the LastUpdatedBy property.</param>
        /// <param name="lastUpdateTime">Initial value of the LastUpdateTime property.</param>
        /// <param name="classType">Initial value of the ClassType property.</param>
        public static OutboundOrder CreateOutboundOrder(global::System.Int32 outboundOrderID, global::System.DateTime outboundDate, global::System.Int32 version, global::System.String code, global::System.Int32 customerID, global::System.Int32 lastUpdatedBy, global::System.DateTime lastUpdateTime, global::System.Int32 classType)
        {
            OutboundOrder outboundOrder = new OutboundOrder();
            outboundOrder.OutboundOrderID = outboundOrderID;
            outboundOrder.OutboundDate = outboundDate;
            outboundOrder.Version = version;
            outboundOrder.Code = code;
            outboundOrder.CustomerID = customerID;
            outboundOrder.LastUpdatedBy = lastUpdatedBy;
            outboundOrder.LastUpdateTime = lastUpdateTime;
            outboundOrder.ClassType = classType;
            return outboundOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OutboundOrderID
        {
            get
            {
                return _OutboundOrderID;
            }
            set
            {
                if (_OutboundOrderID != value)
                {
                    OnOutboundOrderIDChanging(value);
                    ReportPropertyChanging("OutboundOrderID");
                    _OutboundOrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OutboundOrderID");
                    OnOutboundOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OutboundOrderID;
        partial void OnOutboundOrderIDChanging(global::System.Int32 value);
        partial void OnOutboundOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OutboundDate
        {
            get
            {
                return _OutboundDate;
            }
            set
            {
                OnOutboundDateChanging(value);
                ReportPropertyChanging("OutboundDate");
                _OutboundDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundDate");
                OnOutboundDateChanged();
            }
        }
        private global::System.DateTime _OutboundDate;
        partial void OnOutboundDateChanging(global::System.DateTime value);
        partial void OnOutboundDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Job
        {
            get
            {
                return _Job;
            }
            set
            {
                OnJobChanging(value);
                ReportPropertyChanging("Job");
                _Job = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Job");
                OnJobChanged();
            }
        }
        private global::System.String _Job;
        partial void OnJobChanging(global::System.String value);
        partial void OnJobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Berth
        {
            get
            {
                return _Berth;
            }
            set
            {
                OnBerthChanging(value);
                ReportPropertyChanging("Berth");
                _Berth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Berth");
                OnBerthChanged();
            }
        }
        private global::System.String _Berth;
        partial void OnBerthChanging(global::System.String value);
        partial void OnBerthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Machine
        {
            get
            {
                return _Machine;
            }
            set
            {
                OnMachineChanging(value);
                ReportPropertyChanging("Machine");
                _Machine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Machine");
                OnMachineChanged();
            }
        }
        private global::System.String _Machine;
        partial void OnMachineChanging(global::System.String value);
        partial void OnMachineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ship
        {
            get
            {
                return _Ship;
            }
            set
            {
                OnShipChanging(value);
                ReportPropertyChanging("Ship");
                _Ship = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ship");
                OnShipChanged();
            }
        }
        private global::System.String _Ship;
        partial void OnShipChanging(global::System.String value);
        partial void OnShipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hatch
        {
            get
            {
                return _Hatch;
            }
            set
            {
                OnHatchChanging(value);
                ReportPropertyChanging("Hatch");
                _Hatch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hatch");
                OnHatchChanged();
            }
        }
        private global::System.String _Hatch;
        partial void OnHatchChanging(global::System.String value);
        partial void OnHatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cargo
        {
            get
            {
                return _Cargo;
            }
            set
            {
                OnCargoChanging(value);
                ReportPropertyChanging("Cargo");
                _Cargo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cargo");
                OnCargoChanged();
            }
        }
        private global::System.String _Cargo;
        partial void OnCargoChanging(global::System.String value);
        partial void OnCargoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.String _Quantity;
        partial void OnQuantityChanging(global::System.String value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Process
        {
            get
            {
                return _Process;
            }
            set
            {
                OnProcessChanging(value);
                ReportPropertyChanging("Process");
                _Process = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Process");
                OnProcessChanged();
            }
        }
        private global::System.String _Process;
        partial void OnProcessChanging(global::System.String value);
        partial void OnProcessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private global::System.Int32 _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(global::System.Int32 value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTime
        {
            get
            {
                return _LastUpdateTime;
            }
            set
            {
                OnLastUpdateTimeChanging(value);
                ReportPropertyChanging("LastUpdateTime");
                _LastUpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateTime");
                OnLastUpdateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateTime;
        partial void OnLastUpdateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobPosition
        {
            get
            {
                return _JobPosition;
            }
            set
            {
                OnJobPositionChanging(value);
                ReportPropertyChanging("JobPosition");
                _JobPosition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobPosition");
                OnJobPositionChanged();
            }
        }
        private global::System.String _JobPosition;
        partial void OnJobPositionChanging(global::System.String value);
        partial void OnJobPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobType
        {
            get
            {
                return _JobType;
            }
            set
            {
                OnJobTypeChanging(value);
                ReportPropertyChanging("JobType");
                _JobType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobType");
                OnJobTypeChanged();
            }
        }
        private global::System.String _JobType;
        partial void OnJobTypeChanging(global::System.String value);
        partial void OnJobTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassType
        {
            get
            {
                return _ClassType;
            }
            set
            {
                OnClassTypeChanging(value);
                ReportPropertyChanging("ClassType");
                _ClassType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassType");
                OnClassTypeChanged();
            }
        }
        private global::System.Int32 _ClassType;
        partial void OnClassTypeChanging(global::System.Int32 value);
        partial void OnClassTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddTime
        {
            get
            {
                return _AddTime;
            }
            set
            {
                OnAddTimeChanging(value);
                ReportPropertyChanging("AddTime");
                _AddTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddTime");
                OnAddTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddTime;
        partial void OnAddTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAddTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReturnTime
        {
            get
            {
                return _ReturnTime;
            }
            set
            {
                OnReturnTimeChanging(value);
                ReportPropertyChanging("ReturnTime");
                _ReturnTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnTime");
                OnReturnTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReturnTime;
        partial void OnReturnTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnReturnTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_OutboundOrder_SystemUser", "SystemUser")]
        public SystemUser SystemUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_OutboundOrder_SystemUser", "SystemUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_OutboundOrder_SystemUser", "SystemUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemUser> SystemUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_OutboundOrder_SystemUser", "SystemUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemUser>("TMS.Model.FK_OutboundOrder_SystemUser", "SystemUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_OutboundOrder_Unit", "Unit")]
        public Unit Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_OutboundOrder_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_OutboundOrder_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_OutboundOrder_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("TMS.Model.FK_OutboundOrder_Unit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_OutboundOrderDetail_OutboundOrder", "OutboundOrderDetail")]
        public EntityCollection<OutboundOrderDetail> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OutboundOrderDetail>("TMS.Model.FK_OutboundOrderDetail_OutboundOrder", "OutboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OutboundOrderDetail>("TMS.Model.FK_OutboundOrderDetail_OutboundOrder", "OutboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_OutboundOrder", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_OutboundOrder", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_OutboundOrder", "ToolInventoryHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrder_OutboundOrder", "InboundOrder")]
        public EntityCollection<InboundOrder> InboundOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InboundOrder>("TMS.Model.FK_InboundOrder_OutboundOrder", "InboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InboundOrder>("TMS.Model.FK_InboundOrder_OutboundOrder", "InboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrder_OutboundOrder", "ScrapOrder")]
        public EntityCollection<ScrapOrder> ScrapOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScrapOrder>("TMS.Model.FK_ScrapOrder_OutboundOrder", "ScrapOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScrapOrder>("TMS.Model.FK_ScrapOrder_OutboundOrder", "ScrapOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrder_OutboundOrder", "RepairOrder")]
        public EntityCollection<RepairOrder> RepairOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RepairOrder>("TMS.Model.FK_RepairOrder_OutboundOrder", "RepairOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RepairOrder>("TMS.Model.FK_RepairOrder_OutboundOrder", "RepairOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="OutboundOrderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OutboundOrderDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OutboundOrderDetail object.
        /// </summary>
        /// <param name="outboundOrderDetailID">Initial value of the OutboundOrderDetailID property.</param>
        /// <param name="outboundOrderID">Initial value of the OutboundOrderID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="toolID">Initial value of the ToolID property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="outboundDate">Initial value of the OutboundDate property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        public static OutboundOrderDetail CreateOutboundOrderDetail(global::System.Int32 outboundOrderDetailID, global::System.Int32 outboundOrderID, global::System.Int32 version, global::System.Int32 toolID, global::System.Decimal unitPrice, global::System.Decimal quantity, global::System.DateTime outboundDate, global::System.Decimal balance)
        {
            OutboundOrderDetail outboundOrderDetail = new OutboundOrderDetail();
            outboundOrderDetail.OutboundOrderDetailID = outboundOrderDetailID;
            outboundOrderDetail.OutboundOrderID = outboundOrderID;
            outboundOrderDetail.Version = version;
            outboundOrderDetail.ToolID = toolID;
            outboundOrderDetail.UnitPrice = unitPrice;
            outboundOrderDetail.Quantity = quantity;
            outboundOrderDetail.OutboundDate = outboundDate;
            outboundOrderDetail.Balance = balance;
            return outboundOrderDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OutboundOrderDetailID
        {
            get
            {
                return _OutboundOrderDetailID;
            }
            set
            {
                if (_OutboundOrderDetailID != value)
                {
                    OnOutboundOrderDetailIDChanging(value);
                    ReportPropertyChanging("OutboundOrderDetailID");
                    _OutboundOrderDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OutboundOrderDetailID");
                    OnOutboundOrderDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _OutboundOrderDetailID;
        partial void OnOutboundOrderDetailIDChanging(global::System.Int32 value);
        partial void OnOutboundOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OutboundOrderID
        {
            get
            {
                return _OutboundOrderID;
            }
            set
            {
                OnOutboundOrderIDChanging(value);
                ReportPropertyChanging("OutboundOrderID");
                _OutboundOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundOrderID");
                OnOutboundOrderIDChanged();
            }
        }
        private global::System.Int32 _OutboundOrderID;
        partial void OnOutboundOrderIDChanging(global::System.Int32 value);
        partial void OnOutboundOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                OnToolIDChanging(value);
                ReportPropertyChanging("ToolID");
                _ToolID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolID");
                OnToolIDChanged();
            }
        }
        private global::System.Int32 _ToolID;
        partial void OnToolIDChanging(global::System.Int32 value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OutboundDate
        {
            get
            {
                return _OutboundDate;
            }
            set
            {
                OnOutboundDateChanging(value);
                ReportPropertyChanging("OutboundDate");
                _OutboundDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundDate");
                OnOutboundDateChanged();
            }
        }
        private global::System.DateTime _OutboundDate;
        partial void OnOutboundDateChanging(global::System.DateTime value);
        partial void OnOutboundDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_OutboundOrderDetail_OutboundOrder", "OutboundOrder")]
        public OutboundOrder OutboundOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_OutboundOrderDetail_OutboundOrder", "OutboundOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_OutboundOrderDetail_OutboundOrder", "OutboundOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutboundOrder> OutboundOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_OutboundOrderDetail_OutboundOrder", "OutboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutboundOrder>("TMS.Model.FK_OutboundOrderDetail_OutboundOrder", "OutboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_OutboundOrderDetail_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_OutboundOrderDetail_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_OutboundOrderDetail_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_OutboundOrderDetail_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("TMS.Model.FK_OutboundOrderDetail_Tool", "Tool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_OutboundOrderDetail", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_OutboundOrderDetail", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_OutboundOrderDetail", "ToolInventoryHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrderDetail_OutboundOrderDetail", "InboundOrderDetail")]
        public EntityCollection<InboundOrderDetail> InboundOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_OutboundOrderDetail", "InboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_OutboundOrderDetail", "InboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrderDetail_OutboundOrderDetail", "ScrapOrderDetail")]
        public EntityCollection<ScrapOrderDetail> ScrapOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScrapOrderDetail>("TMS.Model.FK_ScrapOrderDetail_OutboundOrderDetail", "ScrapOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScrapOrderDetail>("TMS.Model.FK_ScrapOrderDetail_OutboundOrderDetail", "ScrapOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrderDetail_OutboundOrderDetail", "RepairOrderDetail")]
        public EntityCollection<RepairOrderDetail> RepairOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RepairOrderDetail>("TMS.Model.FK_RepairOrderDetail_OutboundOrderDetail", "RepairOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RepairOrderDetail>("TMS.Model.FK_RepairOrderDetail_OutboundOrderDetail", "RepairOrderDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="PurchaseOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrder object.
        /// </summary>
        /// <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="supplyID">Initial value of the SupplyID property.</param>
        /// <param name="toolID">Initial value of the ToolID property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="purchaseDate">Initial value of the PurchaseDate property.</param>
        /// <param name="lastUpdatedBy">Initial value of the LastUpdatedBy property.</param>
        /// <param name="lastUpdateTime">Initial value of the LastUpdateTime property.</param>
        public static PurchaseOrder CreatePurchaseOrder(global::System.Int32 purchaseOrderID, global::System.String code, global::System.Int32 supplyID, global::System.Int32 toolID, global::System.Decimal unitPrice, global::System.Decimal quantity, global::System.DateTime purchaseDate, global::System.Int32 lastUpdatedBy, global::System.DateTime lastUpdateTime)
        {
            PurchaseOrder purchaseOrder = new PurchaseOrder();
            purchaseOrder.PurchaseOrderID = purchaseOrderID;
            purchaseOrder.Code = code;
            purchaseOrder.SupplyID = supplyID;
            purchaseOrder.ToolID = toolID;
            purchaseOrder.UnitPrice = unitPrice;
            purchaseOrder.Quantity = quantity;
            purchaseOrder.PurchaseDate = purchaseDate;
            purchaseOrder.LastUpdatedBy = lastUpdatedBy;
            purchaseOrder.LastUpdateTime = lastUpdateTime;
            return purchaseOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PurchaseOrderID
        {
            get
            {
                return _PurchaseOrderID;
            }
            set
            {
                if (_PurchaseOrderID != value)
                {
                    OnPurchaseOrderIDChanging(value);
                    ReportPropertyChanging("PurchaseOrderID");
                    _PurchaseOrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PurchaseOrderID");
                    OnPurchaseOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _PurchaseOrderID;
        partial void OnPurchaseOrderIDChanging(global::System.Int32 value);
        partial void OnPurchaseOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplyID
        {
            get
            {
                return _SupplyID;
            }
            set
            {
                OnSupplyIDChanging(value);
                ReportPropertyChanging("SupplyID");
                _SupplyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplyID");
                OnSupplyIDChanged();
            }
        }
        private global::System.Int32 _SupplyID;
        partial void OnSupplyIDChanging(global::System.Int32 value);
        partial void OnSupplyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                OnToolIDChanging(value);
                ReportPropertyChanging("ToolID");
                _ToolID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolID");
                OnToolIDChanged();
            }
        }
        private global::System.Int32 _ToolID;
        partial void OnToolIDChanging(global::System.Int32 value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private global::System.DateTime _PurchaseDate;
        partial void OnPurchaseDateChanging(global::System.DateTime value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private global::System.Int32 _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(global::System.Int32 value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTime
        {
            get
            {
                return _LastUpdateTime;
            }
            set
            {
                OnLastUpdateTimeChanging(value);
                ReportPropertyChanging("LastUpdateTime");
                _LastUpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateTime");
                OnLastUpdateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateTime;
        partial void OnLastUpdateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_PurchaseOrder_Supply", "Supply")]
        public Supply Supply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply>("TMS.Model.FK_PurchaseOrder_Supply", "Supply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply>("TMS.Model.FK_PurchaseOrder_Supply", "Supply").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supply> SupplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply>("TMS.Model.FK_PurchaseOrder_Supply", "Supply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supply>("TMS.Model.FK_PurchaseOrder_Supply", "Supply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_PurchaseOrder_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_PurchaseOrder_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_PurchaseOrder_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_PurchaseOrder_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("TMS.Model.FK_PurchaseOrder_Tool", "Tool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_PurchaseOrder", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_PurchaseOrder", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_PurchaseOrder", "ToolInventoryHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_PurchaseOrder_SystemUser", "SystemUser")]
        public SystemUser SystemUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_PurchaseOrder_SystemUser", "SystemUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_PurchaseOrder_SystemUser", "SystemUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemUser> SystemUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_PurchaseOrder_SystemUser", "SystemUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemUser>("TMS.Model.FK_PurchaseOrder_SystemUser", "SystemUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="RepairOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RepairOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RepairOrder object.
        /// </summary>
        /// <param name="repairOrderID">Initial value of the RepairOrderID property.</param>
        /// <param name="repairDate">Initial value of the RepairDate property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="lastUpdatedBy">Initial value of the LastUpdatedBy property.</param>
        /// <param name="lastUpdateTime">Initial value of the LastUpdateTime property.</param>
        public static RepairOrder CreateRepairOrder(global::System.Int32 repairOrderID, global::System.DateTime repairDate, global::System.String code, global::System.Int32 status, global::System.Int32 lastUpdatedBy, global::System.DateTime lastUpdateTime)
        {
            RepairOrder repairOrder = new RepairOrder();
            repairOrder.RepairOrderID = repairOrderID;
            repairOrder.RepairDate = repairDate;
            repairOrder.Code = code;
            repairOrder.Status = status;
            repairOrder.LastUpdatedBy = lastUpdatedBy;
            repairOrder.LastUpdateTime = lastUpdateTime;
            return repairOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RepairOrderID
        {
            get
            {
                return _RepairOrderID;
            }
            set
            {
                if (_RepairOrderID != value)
                {
                    OnRepairOrderIDChanging(value);
                    ReportPropertyChanging("RepairOrderID");
                    _RepairOrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RepairOrderID");
                    OnRepairOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _RepairOrderID;
        partial void OnRepairOrderIDChanging(global::System.Int32 value);
        partial void OnRepairOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RepairDate
        {
            get
            {
                return _RepairDate;
            }
            set
            {
                OnRepairDateChanging(value);
                ReportPropertyChanging("RepairDate");
                _RepairDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairDate");
                OnRepairDateChanged();
            }
        }
        private global::System.DateTime _RepairDate;
        partial void OnRepairDateChanging(global::System.DateTime value);
        partial void OnRepairDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OutboundOrderID
        {
            get
            {
                return _OutboundOrderID;
            }
            set
            {
                OnOutboundOrderIDChanging(value);
                ReportPropertyChanging("OutboundOrderID");
                _OutboundOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundOrderID");
                OnOutboundOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OutboundOrderID;
        partial void OnOutboundOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnOutboundOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private global::System.Int32 _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(global::System.Int32 value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTime
        {
            get
            {
                return _LastUpdateTime;
            }
            set
            {
                OnLastUpdateTimeChanging(value);
                ReportPropertyChanging("LastUpdateTime");
                _LastUpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateTime");
                OnLastUpdateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateTime;
        partial void OnLastUpdateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrder_OutboundOrder", "OutboundOrder")]
        public OutboundOrder OutboundOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_RepairOrder_OutboundOrder", "OutboundOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_RepairOrder_OutboundOrder", "OutboundOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutboundOrder> OutboundOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_RepairOrder_OutboundOrder", "OutboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutboundOrder>("TMS.Model.FK_RepairOrder_OutboundOrder", "OutboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrder_SystemUser", "SystemUser")]
        public SystemUser SystemUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_RepairOrder_SystemUser", "SystemUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_RepairOrder_SystemUser", "SystemUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemUser> SystemUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_RepairOrder_SystemUser", "SystemUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemUser>("TMS.Model.FK_RepairOrder_SystemUser", "SystemUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrder_Unit", "Unit")]
        public Unit Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_RepairOrder_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_RepairOrder_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_RepairOrder_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("TMS.Model.FK_RepairOrder_Unit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrderDetail_RepairOrder", "RepairOrderDetail")]
        public EntityCollection<RepairOrderDetail> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RepairOrderDetail>("TMS.Model.FK_RepairOrderDetail_RepairOrder", "RepairOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RepairOrderDetail>("TMS.Model.FK_RepairOrderDetail_RepairOrder", "RepairOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_RepairOrder", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_RepairOrder", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_RepairOrder", "ToolInventoryHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="RepairOrderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RepairOrderDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RepairOrderDetail object.
        /// </summary>
        /// <param name="repairOrderDetailID">Initial value of the RepairOrderDetailID property.</param>
        /// <param name="repairOrderID">Initial value of the RepairOrderID property.</param>
        /// <param name="repairDate">Initial value of the RepairDate property.</param>
        /// <param name="toolID">Initial value of the ToolID property.</param>
        /// <param name="repairingQuantity">Initial value of the RepairingQuantity property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="scrapQuantity">Initial value of the ScrapQuantity property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        public static RepairOrderDetail CreateRepairOrderDetail(global::System.Int32 repairOrderDetailID, global::System.Int32 repairOrderID, global::System.DateTime repairDate, global::System.Int32 toolID, global::System.Decimal repairingQuantity, global::System.Decimal quantity, global::System.Decimal scrapQuantity, global::System.Decimal unitPrice)
        {
            RepairOrderDetail repairOrderDetail = new RepairOrderDetail();
            repairOrderDetail.RepairOrderDetailID = repairOrderDetailID;
            repairOrderDetail.RepairOrderID = repairOrderID;
            repairOrderDetail.RepairDate = repairDate;
            repairOrderDetail.ToolID = toolID;
            repairOrderDetail.RepairingQuantity = repairingQuantity;
            repairOrderDetail.Quantity = quantity;
            repairOrderDetail.ScrapQuantity = scrapQuantity;
            repairOrderDetail.UnitPrice = unitPrice;
            return repairOrderDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RepairOrderDetailID
        {
            get
            {
                return _RepairOrderDetailID;
            }
            set
            {
                if (_RepairOrderDetailID != value)
                {
                    OnRepairOrderDetailIDChanging(value);
                    ReportPropertyChanging("RepairOrderDetailID");
                    _RepairOrderDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RepairOrderDetailID");
                    OnRepairOrderDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _RepairOrderDetailID;
        partial void OnRepairOrderDetailIDChanging(global::System.Int32 value);
        partial void OnRepairOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RepairOrderID
        {
            get
            {
                return _RepairOrderID;
            }
            set
            {
                OnRepairOrderIDChanging(value);
                ReportPropertyChanging("RepairOrderID");
                _RepairOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairOrderID");
                OnRepairOrderIDChanged();
            }
        }
        private global::System.Int32 _RepairOrderID;
        partial void OnRepairOrderIDChanging(global::System.Int32 value);
        partial void OnRepairOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RepairDate
        {
            get
            {
                return _RepairDate;
            }
            set
            {
                OnRepairDateChanging(value);
                ReportPropertyChanging("RepairDate");
                _RepairDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairDate");
                OnRepairDateChanged();
            }
        }
        private global::System.DateTime _RepairDate;
        partial void OnRepairDateChanging(global::System.DateTime value);
        partial void OnRepairDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OutboundOrderDetailID
        {
            get
            {
                return _OutboundOrderDetailID;
            }
            set
            {
                OnOutboundOrderDetailIDChanging(value);
                ReportPropertyChanging("OutboundOrderDetailID");
                _OutboundOrderDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundOrderDetailID");
                OnOutboundOrderDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OutboundOrderDetailID;
        partial void OnOutboundOrderDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnOutboundOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                OnToolIDChanging(value);
                ReportPropertyChanging("ToolID");
                _ToolID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolID");
                OnToolIDChanged();
            }
        }
        private global::System.Int32 _ToolID;
        partial void OnToolIDChanging(global::System.Int32 value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RepairingQuantity
        {
            get
            {
                return _RepairingQuantity;
            }
            set
            {
                OnRepairingQuantityChanging(value);
                ReportPropertyChanging("RepairingQuantity");
                _RepairingQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairingQuantity");
                OnRepairingQuantityChanged();
            }
        }
        private global::System.Decimal _RepairingQuantity;
        partial void OnRepairingQuantityChanging(global::System.Decimal value);
        partial void OnRepairingQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ScrapQuantity
        {
            get
            {
                return _ScrapQuantity;
            }
            set
            {
                OnScrapQuantityChanging(value);
                ReportPropertyChanging("ScrapQuantity");
                _ScrapQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScrapQuantity");
                OnScrapQuantityChanged();
            }
        }
        private global::System.Decimal _ScrapQuantity;
        partial void OnScrapQuantityChanging(global::System.Decimal value);
        partial void OnScrapQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScrapReason
        {
            get
            {
                return _ScrapReason;
            }
            set
            {
                OnScrapReasonChanging(value);
                ReportPropertyChanging("ScrapReason");
                _ScrapReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScrapReason");
                OnScrapReasonChanged();
            }
        }
        private global::System.String _ScrapReason;
        partial void OnScrapReasonChanging(global::System.String value);
        partial void OnScrapReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrderDetail_OutboundOrderDetail", "OutboundOrderDetail")]
        public OutboundOrderDetail OutboundOrderDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_RepairOrderDetail_OutboundOrderDetail", "OutboundOrderDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_RepairOrderDetail_OutboundOrderDetail", "OutboundOrderDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutboundOrderDetail> OutboundOrderDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_RepairOrderDetail_OutboundOrderDetail", "OutboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutboundOrderDetail>("TMS.Model.FK_RepairOrderDetail_OutboundOrderDetail", "OutboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrderDetail_RepairOrder", "RepairOrder")]
        public RepairOrder RepairOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepairOrder>("TMS.Model.FK_RepairOrderDetail_RepairOrder", "RepairOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepairOrder>("TMS.Model.FK_RepairOrderDetail_RepairOrder", "RepairOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RepairOrder> RepairOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepairOrder>("TMS.Model.FK_RepairOrderDetail_RepairOrder", "RepairOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RepairOrder>("TMS.Model.FK_RepairOrderDetail_RepairOrder", "RepairOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrderDetail_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_RepairOrderDetail_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_RepairOrderDetail_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_RepairOrderDetail_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("TMS.Model.FK_RepairOrderDetail_Tool", "Tool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_RepairOrderDetail", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_RepairOrderDetail", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_RepairOrderDetail", "ToolInventoryHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="ScrapOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScrapOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScrapOrder object.
        /// </summary>
        /// <param name="scrapOrderID">Initial value of the ScrapOrderID property.</param>
        /// <param name="scrapDate">Initial value of the ScrapDate property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="lastUpdatedBy">Initial value of the LastUpdatedBy property.</param>
        /// <param name="lastUpdateTime">Initial value of the LastUpdateTime property.</param>
        public static ScrapOrder CreateScrapOrder(global::System.Int32 scrapOrderID, global::System.DateTime scrapDate, global::System.String code, global::System.Int32 status, global::System.Int32 lastUpdatedBy, global::System.DateTime lastUpdateTime)
        {
            ScrapOrder scrapOrder = new ScrapOrder();
            scrapOrder.ScrapOrderID = scrapOrderID;
            scrapOrder.ScrapDate = scrapDate;
            scrapOrder.Code = code;
            scrapOrder.Status = status;
            scrapOrder.LastUpdatedBy = lastUpdatedBy;
            scrapOrder.LastUpdateTime = lastUpdateTime;
            return scrapOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScrapOrderID
        {
            get
            {
                return _ScrapOrderID;
            }
            set
            {
                if (_ScrapOrderID != value)
                {
                    OnScrapOrderIDChanging(value);
                    ReportPropertyChanging("ScrapOrderID");
                    _ScrapOrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScrapOrderID");
                    OnScrapOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _ScrapOrderID;
        partial void OnScrapOrderIDChanging(global::System.Int32 value);
        partial void OnScrapOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ScrapDate
        {
            get
            {
                return _ScrapDate;
            }
            set
            {
                OnScrapDateChanging(value);
                ReportPropertyChanging("ScrapDate");
                _ScrapDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScrapDate");
                OnScrapDateChanged();
            }
        }
        private global::System.DateTime _ScrapDate;
        partial void OnScrapDateChanging(global::System.DateTime value);
        partial void OnScrapDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OutboundOrderID
        {
            get
            {
                return _OutboundOrderID;
            }
            set
            {
                OnOutboundOrderIDChanging(value);
                ReportPropertyChanging("OutboundOrderID");
                _OutboundOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundOrderID");
                OnOutboundOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OutboundOrderID;
        partial void OnOutboundOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnOutboundOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private global::System.Int32 _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(global::System.Int32 value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTime
        {
            get
            {
                return _LastUpdateTime;
            }
            set
            {
                OnLastUpdateTimeChanging(value);
                ReportPropertyChanging("LastUpdateTime");
                _LastUpdateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateTime");
                OnLastUpdateTimeChanged();
            }
        }
        private global::System.DateTime _LastUpdateTime;
        partial void OnLastUpdateTimeChanging(global::System.DateTime value);
        partial void OnLastUpdateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrder_OutboundOrder", "OutboundOrder")]
        public OutboundOrder OutboundOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_ScrapOrder_OutboundOrder", "OutboundOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_ScrapOrder_OutboundOrder", "OutboundOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutboundOrder> OutboundOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_ScrapOrder_OutboundOrder", "OutboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutboundOrder>("TMS.Model.FK_ScrapOrder_OutboundOrder", "OutboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrder_SystemUser", "SystemUser")]
        public SystemUser SystemUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_ScrapOrder_SystemUser", "SystemUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_ScrapOrder_SystemUser", "SystemUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SystemUser> SystemUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SystemUser>("TMS.Model.FK_ScrapOrder_SystemUser", "SystemUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SystemUser>("TMS.Model.FK_ScrapOrder_SystemUser", "SystemUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrder_Unit", "Unit")]
        public Unit Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_ScrapOrder_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_ScrapOrder_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_ScrapOrder_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("TMS.Model.FK_ScrapOrder_Unit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrderDetail_ScrapOrder", "ScrapOrderDetail")]
        public EntityCollection<ScrapOrderDetail> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScrapOrderDetail>("TMS.Model.FK_ScrapOrderDetail_ScrapOrder", "ScrapOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScrapOrderDetail>("TMS.Model.FK_ScrapOrderDetail_ScrapOrder", "ScrapOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_ScrapOrder", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_ScrapOrder", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_ScrapOrder", "ToolInventoryHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="ScrapOrderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScrapOrderDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScrapOrderDetail object.
        /// </summary>
        /// <param name="scrapOrderDetailID">Initial value of the ScrapOrderDetailID property.</param>
        /// <param name="scrapOrderID">Initial value of the ScrapOrderID property.</param>
        /// <param name="scrapDate">Initial value of the ScrapDate property.</param>
        /// <param name="toolID">Initial value of the ToolID property.</param>
        /// <param name="prescrapQuantity">Initial value of the PrescrapQuantity property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="scrapQuantity">Initial value of the ScrapQuantity property.</param>
        /// <param name="repairingQuantity">Initial value of the RepairingQuantity property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="isAbnormal">Initial value of the IsAbnormal property.</param>
        public static ScrapOrderDetail CreateScrapOrderDetail(global::System.Int32 scrapOrderDetailID, global::System.Int32 scrapOrderID, global::System.DateTime scrapDate, global::System.Int32 toolID, global::System.Decimal prescrapQuantity, global::System.Decimal quantity, global::System.Decimal scrapQuantity, global::System.Decimal repairingQuantity, global::System.Decimal unitPrice, global::System.Boolean isAbnormal)
        {
            ScrapOrderDetail scrapOrderDetail = new ScrapOrderDetail();
            scrapOrderDetail.ScrapOrderDetailID = scrapOrderDetailID;
            scrapOrderDetail.ScrapOrderID = scrapOrderID;
            scrapOrderDetail.ScrapDate = scrapDate;
            scrapOrderDetail.ToolID = toolID;
            scrapOrderDetail.PrescrapQuantity = prescrapQuantity;
            scrapOrderDetail.Quantity = quantity;
            scrapOrderDetail.ScrapQuantity = scrapQuantity;
            scrapOrderDetail.RepairingQuantity = repairingQuantity;
            scrapOrderDetail.UnitPrice = unitPrice;
            scrapOrderDetail.IsAbnormal = isAbnormal;
            return scrapOrderDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScrapOrderDetailID
        {
            get
            {
                return _ScrapOrderDetailID;
            }
            set
            {
                if (_ScrapOrderDetailID != value)
                {
                    OnScrapOrderDetailIDChanging(value);
                    ReportPropertyChanging("ScrapOrderDetailID");
                    _ScrapOrderDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScrapOrderDetailID");
                    OnScrapOrderDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _ScrapOrderDetailID;
        partial void OnScrapOrderDetailIDChanging(global::System.Int32 value);
        partial void OnScrapOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScrapOrderID
        {
            get
            {
                return _ScrapOrderID;
            }
            set
            {
                OnScrapOrderIDChanging(value);
                ReportPropertyChanging("ScrapOrderID");
                _ScrapOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScrapOrderID");
                OnScrapOrderIDChanged();
            }
        }
        private global::System.Int32 _ScrapOrderID;
        partial void OnScrapOrderIDChanging(global::System.Int32 value);
        partial void OnScrapOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ScrapDate
        {
            get
            {
                return _ScrapDate;
            }
            set
            {
                OnScrapDateChanging(value);
                ReportPropertyChanging("ScrapDate");
                _ScrapDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScrapDate");
                OnScrapDateChanged();
            }
        }
        private global::System.DateTime _ScrapDate;
        partial void OnScrapDateChanging(global::System.DateTime value);
        partial void OnScrapDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OutboundOrderDetailID
        {
            get
            {
                return _OutboundOrderDetailID;
            }
            set
            {
                OnOutboundOrderDetailIDChanging(value);
                ReportPropertyChanging("OutboundOrderDetailID");
                _OutboundOrderDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundOrderDetailID");
                OnOutboundOrderDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OutboundOrderDetailID;
        partial void OnOutboundOrderDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnOutboundOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                OnToolIDChanging(value);
                ReportPropertyChanging("ToolID");
                _ToolID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolID");
                OnToolIDChanged();
            }
        }
        private global::System.Int32 _ToolID;
        partial void OnToolIDChanging(global::System.Int32 value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PrescrapQuantity
        {
            get
            {
                return _PrescrapQuantity;
            }
            set
            {
                OnPrescrapQuantityChanging(value);
                ReportPropertyChanging("PrescrapQuantity");
                _PrescrapQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrescrapQuantity");
                OnPrescrapQuantityChanged();
            }
        }
        private global::System.Decimal _PrescrapQuantity;
        partial void OnPrescrapQuantityChanging(global::System.Decimal value);
        partial void OnPrescrapQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ScrapQuantity
        {
            get
            {
                return _ScrapQuantity;
            }
            set
            {
                OnScrapQuantityChanging(value);
                ReportPropertyChanging("ScrapQuantity");
                _ScrapQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScrapQuantity");
                OnScrapQuantityChanged();
            }
        }
        private global::System.Decimal _ScrapQuantity;
        partial void OnScrapQuantityChanging(global::System.Decimal value);
        partial void OnScrapQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RepairingQuantity
        {
            get
            {
                return _RepairingQuantity;
            }
            set
            {
                OnRepairingQuantityChanging(value);
                ReportPropertyChanging("RepairingQuantity");
                _RepairingQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairingQuantity");
                OnRepairingQuantityChanged();
            }
        }
        private global::System.Decimal _RepairingQuantity;
        partial void OnRepairingQuantityChanging(global::System.Decimal value);
        partial void OnRepairingQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScrapReason
        {
            get
            {
                return _ScrapReason;
            }
            set
            {
                OnScrapReasonChanging(value);
                ReportPropertyChanging("ScrapReason");
                _ScrapReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScrapReason");
                OnScrapReasonChanged();
            }
        }
        private global::System.String _ScrapReason;
        partial void OnScrapReasonChanging(global::System.String value);
        partial void OnScrapReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAbnormal
        {
            get
            {
                return _IsAbnormal;
            }
            set
            {
                OnIsAbnormalChanging(value);
                ReportPropertyChanging("IsAbnormal");
                _IsAbnormal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAbnormal");
                OnIsAbnormalChanged();
            }
        }
        private global::System.Boolean _IsAbnormal;
        partial void OnIsAbnormalChanging(global::System.Boolean value);
        partial void OnIsAbnormalChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrderDetail_OutboundOrderDetail", "OutboundOrderDetail")]
        public OutboundOrderDetail OutboundOrderDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_ScrapOrderDetail_OutboundOrderDetail", "OutboundOrderDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_ScrapOrderDetail_OutboundOrderDetail", "OutboundOrderDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutboundOrderDetail> OutboundOrderDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_ScrapOrderDetail_OutboundOrderDetail", "OutboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutboundOrderDetail>("TMS.Model.FK_ScrapOrderDetail_OutboundOrderDetail", "OutboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrderDetail_ScrapOrder", "ScrapOrder")]
        public ScrapOrder ScrapOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScrapOrder>("TMS.Model.FK_ScrapOrderDetail_ScrapOrder", "ScrapOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScrapOrder>("TMS.Model.FK_ScrapOrderDetail_ScrapOrder", "ScrapOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScrapOrder> ScrapOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScrapOrder>("TMS.Model.FK_ScrapOrderDetail_ScrapOrder", "ScrapOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScrapOrder>("TMS.Model.FK_ScrapOrderDetail_ScrapOrder", "ScrapOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrderDetail_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ScrapOrderDetail_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ScrapOrderDetail_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ScrapOrderDetail_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("TMS.Model.FK_ScrapOrderDetail_Tool", "Tool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_ScrapOrderDetail", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_ScrapOrderDetail", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_ScrapOrderDetail", "ToolInventoryHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="Supply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supply object.
        /// </summary>
        /// <param name="supplyID">Initial value of the SupplyID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Supply CreateSupply(global::System.Int32 supplyID, global::System.String name, global::System.String code, global::System.Boolean deleted)
        {
            Supply supply = new Supply();
            supply.SupplyID = supplyID;
            supply.Name = name;
            supply.Code = code;
            supply.Deleted = deleted;
            return supply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplyID
        {
            get
            {
                return _SupplyID;
            }
            set
            {
                if (_SupplyID != value)
                {
                    OnSupplyIDChanging(value);
                    ReportPropertyChanging("SupplyID");
                    _SupplyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SupplyID");
                    OnSupplyIDChanged();
                }
            }
        }
        private global::System.Int32 _SupplyID;
        partial void OnSupplyIDChanging(global::System.Int32 value);
        partial void OnSupplyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_PurchaseOrder_Supply", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("TMS.Model.FK_PurchaseOrder_Supply", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("TMS.Model.FK_PurchaseOrder_Supply", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventory_Supply", "ToolInventory")]
        public EntityCollection<ToolInventory> ToolInventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventory>("TMS.Model.FK_ToolInventory_Supply", "ToolInventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventory>("TMS.Model.FK_ToolInventory_Supply", "ToolInventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_Supply", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_Supply", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_Supply", "ToolInventoryHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="SystemRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemRole object.
        /// </summary>
        /// <param name="systemRoleID">Initial value of the SystemRoleID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SystemRole CreateSystemRole(global::System.Int32 systemRoleID, global::System.String code, global::System.String name)
        {
            SystemRole systemRole = new SystemRole();
            systemRole.SystemRoleID = systemRoleID;
            systemRole.Code = code;
            systemRole.Name = name;
            return systemRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemRoleID
        {
            get
            {
                return _SystemRoleID;
            }
            set
            {
                if (_SystemRoleID != value)
                {
                    OnSystemRoleIDChanging(value);
                    ReportPropertyChanging("SystemRoleID");
                    _SystemRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemRoleID");
                    OnSystemRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _SystemRoleID;
        partial void OnSystemRoleIDChanging(global::System.Int32 value);
        partial void OnSystemRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="SystemUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SystemUser object.
        /// </summary>
        /// <param name="systemUserID">Initial value of the SystemUserID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roles">Initial value of the Roles property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static SystemUser CreateSystemUser(global::System.Int32 systemUserID, global::System.String code, global::System.String name, global::System.String password, global::System.String roles, global::System.Boolean deleted)
        {
            SystemUser systemUser = new SystemUser();
            systemUser.SystemUserID = systemUserID;
            systemUser.Code = code;
            systemUser.Name = name;
            systemUser.Password = password;
            systemUser.Roles = roles;
            systemUser.Deleted = deleted;
            return systemUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemUserID
        {
            get
            {
                return _SystemUserID;
            }
            set
            {
                if (_SystemUserID != value)
                {
                    OnSystemUserIDChanging(value);
                    ReportPropertyChanging("SystemUserID");
                    _SystemUserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemUserID");
                    OnSystemUserIDChanged();
                }
            }
        }
        private global::System.Int32 _SystemUserID;
        partial void OnSystemUserIDChanging(global::System.Int32 value);
        partial void OnSystemUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Roles
        {
            get
            {
                return _Roles;
            }
            set
            {
                OnRolesChanging(value);
                ReportPropertyChanging("Roles");
                _Roles = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Roles");
                OnRolesChanged();
            }
        }
        private global::System.String _Roles;
        partial void OnRolesChanging(global::System.String value);
        partial void OnRolesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_PurchaseOrder_SystemUser", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("TMS.Model.FK_PurchaseOrder_SystemUser", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("TMS.Model.FK_PurchaseOrder_SystemUser", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_OutboundOrder_SystemUser", "OutboundOrder")]
        public EntityCollection<OutboundOrder> OutboundOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OutboundOrder>("TMS.Model.FK_OutboundOrder_SystemUser", "OutboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OutboundOrder>("TMS.Model.FK_OutboundOrder_SystemUser", "OutboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrder_SystemUser", "InboundOrder")]
        public EntityCollection<InboundOrder> InboundOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InboundOrder>("TMS.Model.FK_InboundOrder_SystemUser", "InboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InboundOrder>("TMS.Model.FK_InboundOrder_SystemUser", "InboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrder_SystemUser", "ScrapOrder")]
        public EntityCollection<ScrapOrder> ScrapOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScrapOrder>("TMS.Model.FK_ScrapOrder_SystemUser", "ScrapOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScrapOrder>("TMS.Model.FK_ScrapOrder_SystemUser", "ScrapOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrder_SystemUser", "RepairOrder")]
        public EntityCollection<RepairOrder> RepairOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RepairOrder>("TMS.Model.FK_RepairOrder_SystemUser", "RepairOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RepairOrder>("TMS.Model.FK_RepairOrder_SystemUser", "RepairOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="Tool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tool : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tool object.
        /// </summary>
        /// <param name="toolID">Initial value of the ToolID property.</param>
        /// <param name="toolCategoryID">Initial value of the ToolCategoryID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dimensions">Initial value of the Dimensions property.</param>
        /// <param name="unit">Initial value of the Unit property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        /// <param name="ratedQuantity">Initial value of the RatedQuantity property.</param>
        /// <param name="displayIndex">Initial value of the DisplayIndex property.</param>
        public static Tool CreateTool(global::System.Int32 toolID, global::System.Int32 toolCategoryID, global::System.String code, global::System.String name, global::System.String dimensions, global::System.String unit, global::System.Boolean deleted, global::System.Decimal ratedQuantity, global::System.Int32 displayIndex)
        {
            Tool tool = new Tool();
            tool.ToolID = toolID;
            tool.ToolCategoryID = toolCategoryID;
            tool.Code = code;
            tool.Name = name;
            tool.Dimensions = dimensions;
            tool.Unit = unit;
            tool.Deleted = deleted;
            tool.RatedQuantity = ratedQuantity;
            tool.DisplayIndex = displayIndex;
            return tool;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                if (_ToolID != value)
                {
                    OnToolIDChanging(value);
                    ReportPropertyChanging("ToolID");
                    _ToolID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToolID");
                    OnToolIDChanged();
                }
            }
        }
        private global::System.Int32 _ToolID;
        partial void OnToolIDChanging(global::System.Int32 value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolCategoryID
        {
            get
            {
                return _ToolCategoryID;
            }
            set
            {
                OnToolCategoryIDChanging(value);
                ReportPropertyChanging("ToolCategoryID");
                _ToolCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolCategoryID");
                OnToolCategoryIDChanged();
            }
        }
        private global::System.Int32 _ToolCategoryID;
        partial void OnToolCategoryIDChanging(global::System.Int32 value);
        partial void OnToolCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Dimensions
        {
            get
            {
                return _Dimensions;
            }
            set
            {
                OnDimensionsChanging(value);
                ReportPropertyChanging("Dimensions");
                _Dimensions = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Dimensions");
                OnDimensionsChanged();
            }
        }
        private global::System.String _Dimensions;
        partial void OnDimensionsChanging(global::System.String value);
        partial void OnDimensionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Diameter
        {
            get
            {
                return _Diameter;
            }
            set
            {
                OnDiameterChanging(value);
                ReportPropertyChanging("Diameter");
                _Diameter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Diameter");
                OnDiameterChanged();
            }
        }
        private global::System.String _Diameter;
        partial void OnDiameterChanging(global::System.String value);
        partial void OnDiameterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private global::System.String _Length;
        partial void OnLengthChanging(global::System.String value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Load2
        {
            get
            {
                return _Load2;
            }
            set
            {
                OnLoad2Changing(value);
                ReportPropertyChanging("Load2");
                _Load2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Load2");
                OnLoad2Changed();
            }
        }
        private global::System.String _Load2;
        partial void OnLoad2Changing(global::System.String value);
        partial void OnLoad2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RatedQuantity
        {
            get
            {
                return _RatedQuantity;
            }
            set
            {
                OnRatedQuantityChanging(value);
                ReportPropertyChanging("RatedQuantity");
                _RatedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RatedQuantity");
                OnRatedQuantityChanged();
            }
        }
        private global::System.Decimal _RatedQuantity;
        partial void OnRatedQuantityChanging(global::System.Decimal value);
        partial void OnRatedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayIndex
        {
            get
            {
                return _DisplayIndex;
            }
            set
            {
                OnDisplayIndexChanging(value);
                ReportPropertyChanging("DisplayIndex");
                _DisplayIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayIndex");
                OnDisplayIndexChanged();
            }
        }
        private global::System.Int32 _DisplayIndex;
        partial void OnDisplayIndexChanging(global::System.Int32 value);
        partial void OnDisplayIndexChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_Tool_ToolCategory", "ToolCategory")]
        public ToolCategory ToolCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolCategory>("TMS.Model.FK_Tool_ToolCategory", "ToolCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolCategory>("TMS.Model.FK_Tool_ToolCategory", "ToolCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ToolCategory> ToolCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolCategory>("TMS.Model.FK_Tool_ToolCategory", "ToolCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ToolCategory>("TMS.Model.FK_Tool_ToolCategory", "ToolCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_PurchaseOrder_Tool", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("TMS.Model.FK_PurchaseOrder_Tool", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("TMS.Model.FK_PurchaseOrder_Tool", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventory_Tool", "ToolInventory")]
        public ToolInventory ToolInventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolInventory>("TMS.Model.FK_ToolInventory_Tool", "ToolInventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolInventory>("TMS.Model.FK_ToolInventory_Tool", "ToolInventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ToolInventory> ToolInventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolInventory>("TMS.Model.FK_ToolInventory_Tool", "ToolInventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ToolInventory>("TMS.Model.FK_ToolInventory_Tool", "ToolInventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_Tool", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_Tool", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_Tool", "ToolInventoryHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_OutboundOrderDetail_Tool", "OutboundOrderDetail")]
        public EntityCollection<OutboundOrderDetail> OutboundOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OutboundOrderDetail>("TMS.Model.FK_OutboundOrderDetail_Tool", "OutboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OutboundOrderDetail>("TMS.Model.FK_OutboundOrderDetail_Tool", "OutboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrderDetail_Tool", "InboundOrderDetail")]
        public EntityCollection<InboundOrderDetail> InboundOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_Tool", "InboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InboundOrderDetail>("TMS.Model.FK_InboundOrderDetail_Tool", "InboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrderDetail_Tool", "ScrapOrderDetail")]
        public EntityCollection<ScrapOrderDetail> ScrapOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScrapOrderDetail>("TMS.Model.FK_ScrapOrderDetail_Tool", "ScrapOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScrapOrderDetail>("TMS.Model.FK_ScrapOrderDetail_Tool", "ScrapOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrderDetail_Tool", "RepairOrderDetail")]
        public EntityCollection<RepairOrderDetail> RepairOrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RepairOrderDetail>("TMS.Model.FK_RepairOrderDetail_Tool", "RepairOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RepairOrderDetail>("TMS.Model.FK_RepairOrderDetail_Tool", "RepairOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolGroup_Tool", "ToolGroup")]
        public EntityCollection<ToolGroup> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolGroup>("TMS.Model.FK_ToolGroup_Tool", "ToolGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolGroup>("TMS.Model.FK_ToolGroup_Tool", "ToolGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolGroup_Tool2", "ToolGroup")]
        public EntityCollection<ToolGroup> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolGroup>("TMS.Model.FK_ToolGroup_Tool2", "ToolGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolGroup>("TMS.Model.FK_ToolGroup_Tool2", "ToolGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="ToolCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ToolCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ToolCategory object.
        /// </summary>
        /// <param name="toolCategoryID">Initial value of the ToolCategoryID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static ToolCategory CreateToolCategory(global::System.Int32 toolCategoryID, global::System.String code, global::System.String name, global::System.Boolean deleted)
        {
            ToolCategory toolCategory = new ToolCategory();
            toolCategory.ToolCategoryID = toolCategoryID;
            toolCategory.Code = code;
            toolCategory.Name = name;
            toolCategory.Deleted = deleted;
            return toolCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolCategoryID
        {
            get
            {
                return _ToolCategoryID;
            }
            set
            {
                if (_ToolCategoryID != value)
                {
                    OnToolCategoryIDChanging(value);
                    ReportPropertyChanging("ToolCategoryID");
                    _ToolCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToolCategoryID");
                    OnToolCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ToolCategoryID;
        partial void OnToolCategoryIDChanging(global::System.Int32 value);
        partial void OnToolCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentCategoryID
        {
            get
            {
                return _ParentCategoryID;
            }
            set
            {
                OnParentCategoryIDChanging(value);
                ReportPropertyChanging("ParentCategoryID");
                _ParentCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentCategoryID");
                OnParentCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentCategoryID;
        partial void OnParentCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ChildCategory_ParentCategory", "ToolCategory1")]
        public EntityCollection<ToolCategory> ChildCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolCategory>("TMS.Model.FK_ChildCategory_ParentCategory", "ToolCategory1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolCategory>("TMS.Model.FK_ChildCategory_ParentCategory", "ToolCategory1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ChildCategory_ParentCategory", "ToolCategory")]
        public ToolCategory ParentCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolCategory>("TMS.Model.FK_ChildCategory_ParentCategory", "ToolCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolCategory>("TMS.Model.FK_ChildCategory_ParentCategory", "ToolCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ToolCategory> ParentCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ToolCategory>("TMS.Model.FK_ChildCategory_ParentCategory", "ToolCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ToolCategory>("TMS.Model.FK_ChildCategory_ParentCategory", "ToolCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_Tool_ToolCategory", "Tool")]
        public EntityCollection<Tool> Tools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tool>("TMS.Model.FK_Tool_ToolCategory", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tool>("TMS.Model.FK_Tool_ToolCategory", "Tool", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="ToolGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ToolGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ToolGroup object.
        /// </summary>
        /// <param name="toolGroupID">Initial value of the ToolGroupID property.</param>
        /// <param name="toolID">Initial value of the ToolID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static ToolGroup CreateToolGroup(global::System.Int32 toolGroupID, global::System.Int32 toolID, global::System.Int32 quantity)
        {
            ToolGroup toolGroup = new ToolGroup();
            toolGroup.ToolGroupID = toolGroupID;
            toolGroup.ToolID = toolID;
            toolGroup.Quantity = quantity;
            return toolGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolGroupID
        {
            get
            {
                return _ToolGroupID;
            }
            set
            {
                if (_ToolGroupID != value)
                {
                    OnToolGroupIDChanging(value);
                    ReportPropertyChanging("ToolGroupID");
                    _ToolGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToolGroupID");
                    OnToolGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _ToolGroupID;
        partial void OnToolGroupIDChanging(global::System.Int32 value);
        partial void OnToolGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                if (_ToolID != value)
                {
                    OnToolIDChanging(value);
                    ReportPropertyChanging("ToolID");
                    _ToolID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToolID");
                    OnToolIDChanged();
                }
            }
        }
        private global::System.Int32 _ToolID;
        partial void OnToolIDChanging(global::System.Int32 value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolGroup_Tool", "Tool")]
        public Tool Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolGroup_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolGroup_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolGroup_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("TMS.Model.FK_ToolGroup_Tool", "Tool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolGroup_Tool2", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolGroup_Tool2", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolGroup_Tool2", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolGroup_Tool2", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("TMS.Model.FK_ToolGroup_Tool2", "Tool", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="ToolInventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ToolInventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ToolInventory object.
        /// </summary>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="toolID">Initial value of the ToolID property.</param>
        /// <param name="outQuantity">Initial value of the OutQuantity property.</param>
        /// <param name="scrapQuantity">Initial value of the ScrapQuantity property.</param>
        /// <param name="repairingQuantity">Initial value of the RepairingQuantity property.</param>
        /// <param name="prescrapQuantity">Initial value of the PrescrapQuantity property.</param>
        public static ToolInventory CreateToolInventory(global::System.Decimal quantity, global::System.Decimal unitPrice, global::System.Int32 toolID, global::System.Decimal outQuantity, global::System.Decimal scrapQuantity, global::System.Decimal repairingQuantity, global::System.Decimal prescrapQuantity)
        {
            ToolInventory toolInventory = new ToolInventory();
            toolInventory.Quantity = quantity;
            toolInventory.UnitPrice = unitPrice;
            toolInventory.ToolID = toolID;
            toolInventory.OutQuantity = outQuantity;
            toolInventory.ScrapQuantity = scrapQuantity;
            toolInventory.RepairingQuantity = repairingQuantity;
            toolInventory.PrescrapQuantity = prescrapQuantity;
            return toolInventory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplyID
        {
            get
            {
                return _SupplyID;
            }
            set
            {
                OnSupplyIDChanging(value);
                ReportPropertyChanging("SupplyID");
                _SupplyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplyID");
                OnSupplyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplyID;
        partial void OnSupplyIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastInboundDate
        {
            get
            {
                return _LastInboundDate;
            }
            set
            {
                OnLastInboundDateChanging(value);
                ReportPropertyChanging("LastInboundDate");
                _LastInboundDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastInboundDate");
                OnLastInboundDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastInboundDate;
        partial void OnLastInboundDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastInboundDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                if (_ToolID != value)
                {
                    OnToolIDChanging(value);
                    ReportPropertyChanging("ToolID");
                    _ToolID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToolID");
                    OnToolIDChanged();
                }
            }
        }
        private global::System.Int32 _ToolID;
        partial void OnToolIDChanging(global::System.Int32 value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OutQuantity
        {
            get
            {
                return _OutQuantity;
            }
            set
            {
                OnOutQuantityChanging(value);
                ReportPropertyChanging("OutQuantity");
                _OutQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutQuantity");
                OnOutQuantityChanged();
            }
        }
        private global::System.Decimal _OutQuantity;
        partial void OnOutQuantityChanging(global::System.Decimal value);
        partial void OnOutQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ScrapQuantity
        {
            get
            {
                return _ScrapQuantity;
            }
            set
            {
                OnScrapQuantityChanging(value);
                ReportPropertyChanging("ScrapQuantity");
                _ScrapQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScrapQuantity");
                OnScrapQuantityChanged();
            }
        }
        private global::System.Decimal _ScrapQuantity;
        partial void OnScrapQuantityChanging(global::System.Decimal value);
        partial void OnScrapQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RepairingQuantity
        {
            get
            {
                return _RepairingQuantity;
            }
            set
            {
                OnRepairingQuantityChanging(value);
                ReportPropertyChanging("RepairingQuantity");
                _RepairingQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairingQuantity");
                OnRepairingQuantityChanged();
            }
        }
        private global::System.Decimal _RepairingQuantity;
        partial void OnRepairingQuantityChanging(global::System.Decimal value);
        partial void OnRepairingQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PrescrapQuantity
        {
            get
            {
                return _PrescrapQuantity;
            }
            set
            {
                OnPrescrapQuantityChanging(value);
                ReportPropertyChanging("PrescrapQuantity");
                _PrescrapQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrescrapQuantity");
                OnPrescrapQuantityChanged();
            }
        }
        private global::System.Decimal _PrescrapQuantity;
        partial void OnPrescrapQuantityChanging(global::System.Decimal value);
        partial void OnPrescrapQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventory_Supply", "Supply")]
        public Supply Supply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply>("TMS.Model.FK_ToolInventory_Supply", "Supply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply>("TMS.Model.FK_ToolInventory_Supply", "Supply").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supply> SupplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply>("TMS.Model.FK_ToolInventory_Supply", "Supply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supply>("TMS.Model.FK_ToolInventory_Supply", "Supply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventory_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolInventory_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolInventory_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolInventory_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("TMS.Model.FK_ToolInventory_Tool", "Tool", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="ToolInventoryHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ToolInventoryHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ToolInventoryHistory object.
        /// </summary>
        /// <param name="toolInventoryHistoryID">Initial value of the ToolInventoryHistoryID property.</param>
        /// <param name="toolID">Initial value of the ToolID property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="toolInventoryHistoryDate">Initial value of the ToolInventoryHistoryDate property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        public static ToolInventoryHistory CreateToolInventoryHistory(global::System.Int32 toolInventoryHistoryID, global::System.Int32 toolID, global::System.Decimal unitPrice, global::System.Decimal quantity, global::System.DateTime toolInventoryHistoryDate, global::System.String account)
        {
            ToolInventoryHistory toolInventoryHistory = new ToolInventoryHistory();
            toolInventoryHistory.ToolInventoryHistoryID = toolInventoryHistoryID;
            toolInventoryHistory.ToolID = toolID;
            toolInventoryHistory.UnitPrice = unitPrice;
            toolInventoryHistory.Quantity = quantity;
            toolInventoryHistory.ToolInventoryHistoryDate = toolInventoryHistoryDate;
            toolInventoryHistory.Account = account;
            return toolInventoryHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolInventoryHistoryID
        {
            get
            {
                return _ToolInventoryHistoryID;
            }
            set
            {
                if (_ToolInventoryHistoryID != value)
                {
                    OnToolInventoryHistoryIDChanging(value);
                    ReportPropertyChanging("ToolInventoryHistoryID");
                    _ToolInventoryHistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToolInventoryHistoryID");
                    OnToolInventoryHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ToolInventoryHistoryID;
        partial void OnToolInventoryHistoryIDChanging(global::System.Int32 value);
        partial void OnToolInventoryHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToolID
        {
            get
            {
                return _ToolID;
            }
            set
            {
                OnToolIDChanging(value);
                ReportPropertyChanging("ToolID");
                _ToolID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolID");
                OnToolIDChanged();
            }
        }
        private global::System.Int32 _ToolID;
        partial void OnToolIDChanging(global::System.Int32 value);
        partial void OnToolIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PurchaseOrderID
        {
            get
            {
                return _PurchaseOrderID;
            }
            set
            {
                OnPurchaseOrderIDChanging(value);
                ReportPropertyChanging("PurchaseOrderID");
                _PurchaseOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseOrderID");
                OnPurchaseOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PurchaseOrderID;
        partial void OnPurchaseOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnPurchaseOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplyID
        {
            get
            {
                return _SupplyID;
            }
            set
            {
                OnSupplyIDChanging(value);
                ReportPropertyChanging("SupplyID");
                _SupplyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplyID");
                OnSupplyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplyID;
        partial void OnSupplyIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ToolInventoryHistoryDate
        {
            get
            {
                return _ToolInventoryHistoryDate;
            }
            set
            {
                OnToolInventoryHistoryDateChanging(value);
                ReportPropertyChanging("ToolInventoryHistoryDate");
                _ToolInventoryHistoryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToolInventoryHistoryDate");
                OnToolInventoryHistoryDateChanged();
            }
        }
        private global::System.DateTime _ToolInventoryHistoryDate;
        partial void OnToolInventoryHistoryDateChanging(global::System.DateTime value);
        partial void OnToolInventoryHistoryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OutboundOrderID
        {
            get
            {
                return _OutboundOrderID;
            }
            set
            {
                OnOutboundOrderIDChanging(value);
                ReportPropertyChanging("OutboundOrderID");
                _OutboundOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundOrderID");
                OnOutboundOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OutboundOrderID;
        partial void OnOutboundOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnOutboundOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OutboundOrderDetailID
        {
            get
            {
                return _OutboundOrderDetailID;
            }
            set
            {
                OnOutboundOrderDetailIDChanging(value);
                ReportPropertyChanging("OutboundOrderDetailID");
                _OutboundOrderDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutboundOrderDetailID");
                OnOutboundOrderDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OutboundOrderDetailID;
        partial void OnOutboundOrderDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnOutboundOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InboundOrderID
        {
            get
            {
                return _InboundOrderID;
            }
            set
            {
                OnInboundOrderIDChanging(value);
                ReportPropertyChanging("InboundOrderID");
                _InboundOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InboundOrderID");
                OnInboundOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InboundOrderID;
        partial void OnInboundOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnInboundOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InboundOrderDetailID
        {
            get
            {
                return _InboundOrderDetailID;
            }
            set
            {
                OnInboundOrderDetailIDChanging(value);
                ReportPropertyChanging("InboundOrderDetailID");
                _InboundOrderDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InboundOrderDetailID");
                OnInboundOrderDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InboundOrderDetailID;
        partial void OnInboundOrderDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnInboundOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScrapOrderID
        {
            get
            {
                return _ScrapOrderID;
            }
            set
            {
                OnScrapOrderIDChanging(value);
                ReportPropertyChanging("ScrapOrderID");
                _ScrapOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScrapOrderID");
                OnScrapOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ScrapOrderID;
        partial void OnScrapOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnScrapOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScrapOrderDetailID
        {
            get
            {
                return _ScrapOrderDetailID;
            }
            set
            {
                OnScrapOrderDetailIDChanging(value);
                ReportPropertyChanging("ScrapOrderDetailID");
                _ScrapOrderDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScrapOrderDetailID");
                OnScrapOrderDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ScrapOrderDetailID;
        partial void OnScrapOrderDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnScrapOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepairOrderID
        {
            get
            {
                return _RepairOrderID;
            }
            set
            {
                OnRepairOrderIDChanging(value);
                ReportPropertyChanging("RepairOrderID");
                _RepairOrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairOrderID");
                OnRepairOrderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RepairOrderID;
        partial void OnRepairOrderIDChanging(Nullable<global::System.Int32> value);
        partial void OnRepairOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepairOrderDetailID
        {
            get
            {
                return _RepairOrderDetailID;
            }
            set
            {
                OnRepairOrderDetailIDChanging(value);
                ReportPropertyChanging("RepairOrderDetailID");
                _RepairOrderDetailID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepairOrderDetailID");
                OnRepairOrderDetailIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RepairOrderDetailID;
        partial void OnRepairOrderDetailIDChanging(Nullable<global::System.Int32> value);
        partial void OnRepairOrderDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_PurchaseOrder", "PurchaseOrder")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("TMS.Model.FK_ToolInventoryHistory_PurchaseOrder", "PurchaseOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("TMS.Model.FK_ToolInventoryHistory_PurchaseOrder", "PurchaseOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("TMS.Model.FK_ToolInventoryHistory_PurchaseOrder", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("TMS.Model.FK_ToolInventoryHistory_PurchaseOrder", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_Supply", "Supply")]
        public Supply Supply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply>("TMS.Model.FK_ToolInventoryHistory_Supply", "Supply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply>("TMS.Model.FK_ToolInventoryHistory_Supply", "Supply").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supply> SupplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply>("TMS.Model.FK_ToolInventoryHistory_Supply", "Supply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supply>("TMS.Model.FK_ToolInventoryHistory_Supply", "Supply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_Tool", "Tool")]
        public Tool Tool
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolInventoryHistory_Tool", "Tool").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolInventoryHistory_Tool", "Tool").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tool> ToolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tool>("TMS.Model.FK_ToolInventoryHistory_Tool", "Tool");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tool>("TMS.Model.FK_ToolInventoryHistory_Tool", "Tool", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_OutboundOrder", "OutboundOrder")]
        public OutboundOrder OutboundOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_ToolInventoryHistory_OutboundOrder", "OutboundOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_ToolInventoryHistory_OutboundOrder", "OutboundOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutboundOrder> OutboundOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrder>("TMS.Model.FK_ToolInventoryHistory_OutboundOrder", "OutboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutboundOrder>("TMS.Model.FK_ToolInventoryHistory_OutboundOrder", "OutboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_OutboundOrderDetail", "OutboundOrderDetail")]
        public OutboundOrderDetail OutboundOrderDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_ToolInventoryHistory_OutboundOrderDetail", "OutboundOrderDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_ToolInventoryHistory_OutboundOrderDetail", "OutboundOrderDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutboundOrderDetail> OutboundOrderDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutboundOrderDetail>("TMS.Model.FK_ToolInventoryHistory_OutboundOrderDetail", "OutboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutboundOrderDetail>("TMS.Model.FK_ToolInventoryHistory_OutboundOrderDetail", "OutboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_Unit", "Unit")]
        public Unit Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_ToolInventoryHistory_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_ToolInventoryHistory_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_ToolInventoryHistory_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("TMS.Model.FK_ToolInventoryHistory_Unit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_InboundOrder", "InboundOrder")]
        public InboundOrder InboundOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundOrder>("TMS.Model.FK_ToolInventoryHistory_InboundOrder", "InboundOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundOrder>("TMS.Model.FK_ToolInventoryHistory_InboundOrder", "InboundOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InboundOrder> InboundOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundOrder>("TMS.Model.FK_ToolInventoryHistory_InboundOrder", "InboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InboundOrder>("TMS.Model.FK_ToolInventoryHistory_InboundOrder", "InboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_InboundOrderDetail", "InboundOrderDetail")]
        public InboundOrderDetail InboundOrderDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundOrderDetail>("TMS.Model.FK_ToolInventoryHistory_InboundOrderDetail", "InboundOrderDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundOrderDetail>("TMS.Model.FK_ToolInventoryHistory_InboundOrderDetail", "InboundOrderDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InboundOrderDetail> InboundOrderDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InboundOrderDetail>("TMS.Model.FK_ToolInventoryHistory_InboundOrderDetail", "InboundOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InboundOrderDetail>("TMS.Model.FK_ToolInventoryHistory_InboundOrderDetail", "InboundOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_RepairOrder", "RepairOrder")]
        public RepairOrder RepairOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepairOrder>("TMS.Model.FK_ToolInventoryHistory_RepairOrder", "RepairOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepairOrder>("TMS.Model.FK_ToolInventoryHistory_RepairOrder", "RepairOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RepairOrder> RepairOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepairOrder>("TMS.Model.FK_ToolInventoryHistory_RepairOrder", "RepairOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RepairOrder>("TMS.Model.FK_ToolInventoryHistory_RepairOrder", "RepairOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_RepairOrderDetail", "RepairOrderDetail")]
        public RepairOrderDetail RepairOrderDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepairOrderDetail>("TMS.Model.FK_ToolInventoryHistory_RepairOrderDetail", "RepairOrderDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepairOrderDetail>("TMS.Model.FK_ToolInventoryHistory_RepairOrderDetail", "RepairOrderDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RepairOrderDetail> RepairOrderDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RepairOrderDetail>("TMS.Model.FK_ToolInventoryHistory_RepairOrderDetail", "RepairOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RepairOrderDetail>("TMS.Model.FK_ToolInventoryHistory_RepairOrderDetail", "RepairOrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_ScrapOrder", "ScrapOrder")]
        public ScrapOrder ScrapOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScrapOrder>("TMS.Model.FK_ToolInventoryHistory_ScrapOrder", "ScrapOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScrapOrder>("TMS.Model.FK_ToolInventoryHistory_ScrapOrder", "ScrapOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScrapOrder> ScrapOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScrapOrder>("TMS.Model.FK_ToolInventoryHistory_ScrapOrder", "ScrapOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScrapOrder>("TMS.Model.FK_ToolInventoryHistory_ScrapOrder", "ScrapOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_ScrapOrderDetail", "ScrapOrderDetail")]
        public ScrapOrderDetail ScrapOrderDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScrapOrderDetail>("TMS.Model.FK_ToolInventoryHistory_ScrapOrderDetail", "ScrapOrderDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScrapOrderDetail>("TMS.Model.FK_ToolInventoryHistory_ScrapOrderDetail", "ScrapOrderDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScrapOrderDetail> ScrapOrderDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScrapOrderDetail>("TMS.Model.FK_ToolInventoryHistory_ScrapOrderDetail", "ScrapOrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScrapOrderDetail>("TMS.Model.FK_ToolInventoryHistory_ScrapOrderDetail", "ScrapOrderDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TMS.Model", Name="Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Unit object.
        /// </summary>
        /// <param name="unitID">Initial value of the UnitID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Unit CreateUnit(global::System.Int32 unitID, global::System.String code, global::System.String name, global::System.Boolean deleted)
        {
            Unit unit = new Unit();
            unit.UnitID = unitID;
            unit.Code = code;
            unit.Name = name;
            unit.Deleted = deleted;
            return unit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitID
        {
            get
            {
                return _UnitID;
            }
            set
            {
                if (_UnitID != value)
                {
                    OnUnitIDChanging(value);
                    ReportPropertyChanging("UnitID");
                    _UnitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnitID");
                    OnUnitIDChanged();
                }
            }
        }
        private global::System.Int32 _UnitID;
        partial void OnUnitIDChanging(global::System.Int32 value);
        partial void OnUnitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentUnitID
        {
            get
            {
                return _ParentUnitID;
            }
            set
            {
                OnParentUnitIDChanging(value);
                ReportPropertyChanging("ParentUnitID");
                _ParentUnitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentUnitID");
                OnParentUnitIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentUnitID;
        partial void OnParentUnitIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentUnitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalCode
        {
            get
            {
                return _InternalCode;
            }
            set
            {
                OnInternalCodeChanging(value);
                ReportPropertyChanging("InternalCode");
                _InternalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalCode");
                OnInternalCodeChanged();
            }
        }
        private global::System.String _InternalCode;
        partial void OnInternalCodeChanging(global::System.String value);
        partial void OnInternalCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ChildUnit_ParentUnit", "Unit1")]
        public EntityCollection<Unit> ChildUnits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Unit>("TMS.Model.FK_ChildUnit_ParentUnit", "Unit1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Unit>("TMS.Model.FK_ChildUnit_ParentUnit", "Unit1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ChildUnit_ParentUnit", "Unit")]
        public Unit ParentUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_ChildUnit_ParentUnit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_ChildUnit_ParentUnit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> ParentUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("TMS.Model.FK_ChildUnit_ParentUnit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("TMS.Model.FK_ChildUnit_ParentUnit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_OutboundOrder_Unit", "OutboundOrder")]
        public EntityCollection<OutboundOrder> OutboundOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OutboundOrder>("TMS.Model.FK_OutboundOrder_Unit", "OutboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OutboundOrder>("TMS.Model.FK_OutboundOrder_Unit", "OutboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ToolInventoryHistory_Unit", "ToolInventoryHistory")]
        public EntityCollection<ToolInventoryHistory> ToolInventoryHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_Unit", "ToolInventoryHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ToolInventoryHistory>("TMS.Model.FK_ToolInventoryHistory_Unit", "ToolInventoryHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_InboundOrder_Unit", "InboundOrder")]
        public EntityCollection<InboundOrder> InboundOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InboundOrder>("TMS.Model.FK_InboundOrder_Unit", "InboundOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InboundOrder>("TMS.Model.FK_InboundOrder_Unit", "InboundOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_ScrapOrder_Unit", "ScrapOrder")]
        public EntityCollection<ScrapOrder> ScrapOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScrapOrder>("TMS.Model.FK_ScrapOrder_Unit", "ScrapOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScrapOrder>("TMS.Model.FK_ScrapOrder_Unit", "ScrapOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TMS.Model", "FK_RepairOrder_Unit", "RepairOrder")]
        public EntityCollection<RepairOrder> RepairOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RepairOrder>("TMS.Model.FK_RepairOrder_Unit", "RepairOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RepairOrder>("TMS.Model.FK_RepairOrder_Unit", "RepairOrder", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
